{"hash":"05754d63fe96756e6a5182181aa8692e88e553af","data":{"works":{"totalCount":29,"pageInfo":{"totalPages":10,"currentPage":4,"isFirst":false,"isLast":false},"edges":[{"node":{"id":"1aaa141f21dad4520c1123e143c5a6b3","title":"Unable to verify HTTPS server configuration – Ookla Speedtest Custom","URL":"https://support.ookla.com/hc/en-us/articles/115003334412-Unable-to-verify-HTTPS-server-configuration","Stub":"To support latest browser security protocols, it was it was important that vendors follow guidelines to ensure their server networking software could pass routine security monitoring watchdog process developed by Ookla.","path":"/work/unable-to-verify-https-server-configuration-ookla-speedtest-custom/","Company":"Ookla (Speedtest.net)","Subject_Matter":"HTTPS, SSL Certificates, Transport Layer Security (TLS)"}},{"node":{"id":"e2da5c03994d491813ef5a9053f6b543","title":"SuperDOM Column - NinjaTrader 8 Help Guide","URL":"https://ninjatrader.com/support/helpGuides/nt8/?superdom_column.htm","Stub":"A flagship order entry feature for day traders was enhanced to allow users to write custom add-ons using C# scripts that would interact with the WPF layouts provided by NinjaTrader. This is the API reference documentation to allow a user to start using these types.","path":"/work/super-dom-column-ninja-trader-8-help-guide/","Company":"NinjaTrader LLC","Subject_Matter":".NET, C#, NinjaScript, WPF"}},{"node":{"id":"09c668298bb59e6cebd4da3bc985c9a4","title":"Storing STC results using Javascript – Ookla Speedtest Custom","URL":"https://support.ookla.com/hc/en-us/articles/360000725112-Storing-STC-results-using-Javascript","Stub":"To help with proving a popular use case, we provided a code sample written in PHP to help demonstrate how data could be exchanged from Javascript to a SQL database.","path":"/work/storing-stc-results-using-javascript-ookla-speedtest-custom/","Company":"Ookla (Speedtest.net)","Subject_Matter":"Cross-Origin Resource Sharing (CORS), JavaScript, PHP, SQL, XHR"}}]}},"context":{}}